#!/usr/bin/with-contenv bash

# Определяем где будут храниться модели
CACHE_DIR="/share/onnxasr"
export HOME="${CACHE_DIR}"
mkdir -p "${CACHE_DIR}"

# Добавляем /app в PYTHONPATH
export PYTHONPATH=/app:$PYTHONPATH

bashio::log.info "Starting ONNX ASR server..."

# Читаем опции из конфигурации аддона
MODEL=$(bashio::config 'model')
QUANTIZATION=$(bashio::config 'quantization')
DEVICE=$(bashio::config 'device')
PORT=$(bashio::config 'port')
DEBUG=$(bashio::config.true 'debug')

# Собираем аргументы для команды
ARGS=(
    --model "${MODEL}"
    --uri "tcp://0.0.0.0:${PORT}"
    --quantization "${QUANTIZATION}"
    --device "${DEVICE}"
)

# Добавляем флаг --debug, если включен
if [ "${DEBUG}" = "true" ]; then
    ARGS+=(--debug)
fi

bashio::log.info "Running ONNX ASR с model: ${MODEL}, port: ${PORT}, quantization: ${QUANTIZATION}, device: ${DEVICE}, debug: ${DEBUG}"

# Запускаем сервер
exec python3 -m wyoming_onnxasr "${ARGS[@]}" || {
    bashio::log.error "Failed to start ONNX ASR server"
    exit 1
}
